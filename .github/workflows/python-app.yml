# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        runs-on: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and coverage
      run: |
        pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=com --cov-report=xml
    
    
    - name: Publish Unit Test Results for ${{ matrix.python-version }}-${{ matrix.runs-on }}
      if: ${{ matrix.runs-on == "ubuntu-latest" }}
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        files: test-results/**/*.xml
    - name: Publish Unit Test Results for ${{ matrix.python-version }}-${{ matrix.runs-on }}
      if: ${{ matrix.runs-on == "macos-latest" }}
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      with:
        files: test-results/**/*.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}-${{ matrix.runs-on }}
        path: junit/test-results-${{ matrix.python-version }}-${{ matrix.runs-on }}.xml
